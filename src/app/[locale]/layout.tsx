import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import TranslationProvider from "@/context/translation_provider";
import initTranslations, { NAME_SPACES } from "@/utils/i18n";
import i18nConfig from "@/i18nConfig";
import { dir } from "i18next";
import LanguageChanger from "@/components/language_changer";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Generate static params for all locales
export function generateStaticParams() {
  return i18nConfig.locales.map((locale) => ({ locale }));
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  const { resources } = await initTranslations(locale, [
    "home",
    "common",
    "about",
  ]);

  return (
    <html lang={locale} dir={dir(locale)}>
      <body
        className={`relative ${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <TranslationProvider
          resources={resources}
          locale={locale}
          namespaces={NAME_SPACES}
        >
          <header className="w-full sticky top-0 flex justify-center items-center">
            <LanguageChanger />
          </header>
          {children}
        </TranslationProvider>
      </body>
    </html>
  );
}
